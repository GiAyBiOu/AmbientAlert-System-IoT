[
    {
        "id": "main_flow",
        "type": "tab",
        "label": "AmbientAlert IoT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "Mosquitto",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "NodeRED_Alert",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true
    },
    {
        "id": "dashboard_tab",
        "type": "ui_tab",
        "name": "AmbientAlert System",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "sensors_group",
        "type": "ui_group",
        "name": "ESP32 Sensors",
        "tab": "dashboard_tab",
        "order": 1,
        "disp": true,
        "width": 12
    },
    {
        "id": "status_group",
        "type": "ui_group",
        "name": "System Status",
        "tab": "dashboard_tab",
        "order": 2,
        "disp": true,
        "width": 12
    },
    {
        "id": "chart_group",
        "type": "ui_group",
        "name": "Real-time Chart",
        "tab": "dashboard_tab",
        "order": 3,
        "disp": true,
        "width": 12
    },
    {
        "id": "mqtt_in",
        "type": "mqtt in",
        "z": "main_flow",
        "name": "ESP32 Data",
        "topic": "gm/ambientsystem/iot/sensors",
        "qos": "1",
        "datatype": "json",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 120,
        "y": 80,
        "wires": [["function_parse"]]
    },
    {
        "id": "function_parse",
        "type": "function",
        "z": "main_flow",
        "name": "Parse Data",
        "func": "if (msg.payload.device_id === 'ESP32-ENV-001') {\n    const temp = parseFloat(msg.payload.temperature);\n    const hum = parseFloat(msg.payload.humidity);\n    const alert = msg.payload.alert_active;\n    const damper = msg.payload.damper_open;\n    \n    return [\n        {payload: temp, topic: 'temp'},\n        {payload: hum, topic: 'hum'},\n        {payload: alert ? 'üö® ALERT' : '‚úÖ Normal', topic: 'alert'},\n        {payload: damper ? 'üå¨Ô∏è OPEN' : 'üö™ CLOSED', topic: 'damper'},\n        {payload: [{x: new Date(), y: temp}], topic: 'chart'}\n    ];\n}\nreturn null;",
        "outputs": 5,
        "x": 300,
        "y": 80,
        "wires": [["temp_gauge"], ["humidity_gauge"], ["alert_text"], ["damper_text"], ["chart"]]
    },
    {
        "id": "temp_gauge",
        "type": "ui_gauge",
        "z": "main_flow",
        "name": "Temperature",
        "group": "sensors_group",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "üå°Ô∏è Temperature",
        "label": "¬∞C",
        "format": "{{value}}",
        "min": 0,
        "max": 50,
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": 30,
        "seg2": 37,
        "x": 500,
        "y": 40,
        "wires": []
    },
    {
        "id": "humidity_gauge",
        "type": "ui_gauge",
        "z": "main_flow",
        "name": "Humidity",
        "group": "sensors_group",
        "order": 2,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "üíß Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": ["#ca3838","#e6e600","#00b500"],
        "seg1": 30,
        "seg2": 70,
        "x": 500,
        "y": 80,
        "wires": []
    },
    {
        "id": "alert_text",
        "type": "ui_text",
        "z": "main_flow",
        "group": "status_group",
        "order": 1,
        "width": 6,
        "height": 2,
        "name": "Alert Status",
        "label": "Alert Status",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 500,
        "y": 120,
        "wires": []
    },
    {
        "id": "damper_text",
        "type": "ui_text",
        "z": "main_flow",
        "group": "status_group",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "Damper Status",
        "label": "Damper Status",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "chart",
        "type": "ui_chart",
        "z": "main_flow",
        "name": "Temperature Chart",
        "group": "chart_group",
        "order": 1,
        "width": 12,
        "height": 6,
        "label": "üìà Temperature History",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for data...",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "x": 500,
        "y": 200,
        "wires": [[]]
    },
    {
        "id": "test_inject",
        "type": "inject",
        "z": "main_flow",
        "name": "Test Data",
        "props": [{"p": "payload"}],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"device_id\":\"ESP32-ENV-001\",\"temperature\":35.5,\"humidity\":65,\"alert_active\":false,\"damper_open\":false}",
        "payloadType": "json",
        "x": 120,
        "y": 140,
        "wires": [["function_parse"]]
    },
    {
        "id": "debug",
        "type": "debug",
        "z": "main_flow",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 480,
        "y": 240,
        "wires": []
    }
] 